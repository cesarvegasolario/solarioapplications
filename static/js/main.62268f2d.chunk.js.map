{"version":3,"sources":["Main.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginLeft","minWidth","TextField","width","button","margin","height","Main","facturaIndex","useRef","notasIndex","classes","useState","tipoDocumento","setTipoDocumento","cuentaDelOrdenDelPM","setCuentaDelOrdenDelPM","FUF","setFUF","periodoECD","setPeriodoECD","fechaLimDePago","setFechaLimDePago","contacto","setContacto","banco","setBanco","sucursal","setSucursal","cuenta","setCuenta","CLABE","setCLABE","referencia","setReferencia","FUL","setFUL","cantidad","setCantidad","concepto","setConcepto","unidad","setUnidad","precioUnitario","setPrecioUnitario","importeLinea","setImporteLinea","tasaIVA","setTasaIVA","FULCredito","setFULCredito","conceptoCredito","setConceptoCredito","importeOriginal","setImporteOriginal","importeModificado","setImporteModificado","tasaIVACredito","setTasaIVACredito","conceptosFacturaBuild","index","Grid","id","item","xs","label","variant","value","onChange","e","newArr","target","updateFUL","updateCantidad","updateConcepto","updateUnidad","updatePrecioUnitario","updateImporteLinea","updateTasaIVA","conceptosNotaCredito","updateFULCredito","updateConceptoCredito","updateImporteOriginal","updateImporteModificado","updateTasaIVACredito","setRefreshSite","facturasArr","setFacturasArr","notasArr","setNotasArr","container","className","spacing","type","name","window","confirm","file","files","reader","FileReader","readAsText","onloadend","xmlData","result","splitIndex","indexOf","xmlDataBase","substr","xmlDataFin","newXmlData","current","i","console","log","nombreArchivoADescargar","prompt","fileDownload","alert","style","display","alignItems","Button","onClick","push","Math","random","map","facturaArr","arr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62268f2d.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// var fileDownload = require('js-file-download');\r\nimport fileDownload from 'js-file-download'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: \"20px\",\r\n    minWidth: \"1444px\",\r\n  },\r\n  TextField: {\r\n    width: \"70%\",\r\n  },\r\n  button: {\r\n    margin: \"0px 5px 0px 5px\",\r\n    height: \"50%\",\r\n  },\r\n}));\r\n\r\nexport default function Main() {\r\n  const facturaIndex = useRef(1);\r\n  const notasIndex = useRef(1);\r\n\r\n  const classes = useStyles();\r\n  const [tipoDocumento, setTipoDocumento] = useState(\"\");\r\n  const [cuentaDelOrdenDelPM, setCuentaDelOrdenDelPM] = useState(\"\");\r\n  const [FUF, setFUF] = useState(\"\");\r\n  const [periodoECD, setPeriodoECD] = useState(\"\");\r\n  const [fechaLimDePago, setFechaLimDePago] = useState(\"\");\r\n  const [contacto, setContacto] = useState(\"\");\r\n  const [banco, setBanco] = useState(\"\");\r\n  const [sucursal, setSucursal] = useState(\"\");\r\n  const [cuenta, setCuenta] = useState(\"\");\r\n  const [CLABE, setCLABE] = useState(\"\");\r\n  const [referencia, setReferencia] = useState(\"\");\r\n\r\n  const updateTipoDocumento = (e) => {\r\n    setTipoDocumento(e.target.value);\r\n  };\r\n\r\n  const updateCuentaDelOrdenDelPM = (e) => {\r\n    setCuentaDelOrdenDelPM(e.target.value);\r\n  };\r\n\r\n  const updateFUF = (e) => {\r\n    setFUF(e.target.value);\r\n  };\r\n\r\n  const updatePeriodoECD = (e) => {\r\n    setPeriodoECD(e.target.value);\r\n  };\r\n\r\n  const updateFechaLimDePago = (e) => {\r\n    setFechaLimDePago(e.target.value);\r\n  };\r\n\r\n  const updateContacto = (e) => {\r\n    setContacto(e.target.value);\r\n  };\r\n\r\n  const updateBanco = (e) => {\r\n    setBanco(e.target.value);\r\n  };\r\n  const updateSucursal = (e) => {\r\n    setSucursal(e.target.value);\r\n  };\r\n  const updateCuenta = (e) => {\r\n    setCuenta(e.target.value);\r\n  };\r\n  const updateCLABE = (e) => {\r\n    setCLABE(e.target.value);\r\n  };\r\n  const updateReferencia = (e) => {\r\n    setReferencia(e.target.value);\r\n  };\r\n\r\n  //Conceptos factura\r\n  const [FUL, setFUL] = useState([]);\r\n  const [cantidad, setCantidad] = useState([]);\r\n  const [concepto, setConcepto] = useState([]);\r\n  const [unidad, setUnidad] = useState([]);\r\n  const [precioUnitario, setPrecioUnitario] = useState([]);\r\n  const [importeLinea, setImporteLinea] = useState([]);\r\n  const [tasaIVA, setTasaIVA] = useState([]);\r\n\r\n  const updateFUL = (e, index) => {\r\n    const newArr = FUL;\r\n    newArr[index] = e.target.value;\r\n    setFUL(newArr);\r\n  };\r\n  const updateCantidad = (e, index) => {\r\n    const newArr = cantidad;\r\n    newArr[index] = e.target.value;\r\n    setCantidad(newArr);\r\n  };\r\n  const updateConcepto = (e, index) => {\r\n    const newArr = concepto;\r\n    newArr[index] = e.target.value;\r\n    setConcepto(newArr);\r\n  };\r\n  const updateUnidad = (e, index) => {\r\n    const newArr = unidad;\r\n    newArr[index] = e.target.value;\r\n    setUnidad(newArr);\r\n  };\r\n  const updatePrecioUnitario = (e, index) => {\r\n    const newArr = precioUnitario;\r\n    newArr[index] = e.target.value;\r\n    setPrecioUnitario(newArr);\r\n  };\r\n  const updateImporteLinea = (e, index) => {\r\n    const newArr = importeLinea;\r\n    newArr[index] = e.target.value;\r\n    setImporteLinea(newArr);\r\n  };\r\n\r\n  const updateTasaIVA = (e, index) => {\r\n    const newArr = tasaIVA;\r\n    newArr[index] = e.target.value;\r\n    setTasaIVA(newArr);\r\n  };\r\n\r\n  //Conceptos nota de crédito/cargo\r\n  const [FULCredito, setFULCredito] = useState([]);\r\n  const [conceptoCredito, setConceptoCredito] = useState([]);\r\n  const [importeOriginal, setImporteOriginal] = useState([]);\r\n  const [importeModificado, setImporteModificado] = useState([]);\r\n  const [tasaIVACredito, setTasaIVACredito] = useState([]);\r\n\r\n  const updateFULCredito = (e, index) => {\r\n    const newArr = FULCredito;\r\n    newArr[index] = e.target.value;\r\n    setFULCredito(newArr);\r\n  };\r\n\r\n  const updateConceptoCredito = (e, index) => {\r\n    const newArr = conceptoCredito;\r\n    newArr[index] = e.target.value;\r\n    setConceptoCredito(newArr);\r\n  };\r\n\r\n  const updateImporteOriginal = (e, index) => {\r\n    const newArr = importeOriginal;\r\n    newArr[index] = e.target.value;\r\n    setImporteOriginal(newArr);\r\n  };\r\n\r\n  const updateImporteModificado = (e, index) => {\r\n    const newArr = importeModificado;\r\n    newArr[index] = e.target.value;\r\n    setImporteModificado(newArr);\r\n  };\r\n\r\n  const updateTasaIVACredito = (e, index) => {\r\n    const newArr = tasaIVACredito;\r\n    newArr[index] = e.target.value;\r\n    setTasaIVACredito(newArr);\r\n  };\r\n\r\n  const conceptosFacturaBuild = (index) => {\r\n    return (\r\n      <>\r\n        <Grid id={`conceptos-factura-${index}`}>{index}</Grid>\r\n        <Grid item xs={2}>\r\n          <TextField\r\n            label=\"FUL\"\r\n            variant=\"outlined\"\r\n            value={FUL[index - 1]}\r\n            onChange={(e) => updateFUL(e, index)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <TextField\r\n            label=\"Cantidad\"\r\n            variant=\"outlined\"\r\n            value={cantidad[index - 1]}\r\n            onChange={(e) => updateCantidad(e, index)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <TextField\r\n            label=\"Concepto\"\r\n            variant=\"outlined\"\r\n            value={concepto[index - 1]}\r\n            onChange={(e) => updateConcepto(e, index)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <TextField\r\n            label=\"Unidad\"\r\n            variant=\"outlined\"\r\n            value={unidad[index - 1]}\r\n            onChange={(e) => updateUnidad(e, index)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <TextField\r\n            label=\"Precio Unitario\"\r\n            variant=\"outlined\"\r\n            value={precioUnitario[index - 1]}\r\n            onChange={(e) => updatePrecioUnitario(e, index)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <TextField\r\n            label=\"Importe linea\"\r\n            variant=\"outlined\"\r\n            value={importeLinea[index - 1]}\r\n            onChange={(e) => updateImporteLinea(e, index)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <TextField\r\n            label=\"Tasa IVA\"\r\n            variant=\"outlined\"\r\n            value={tasaIVA[index - 1]}\r\n            onChange={(e) => updateTasaIVA(e, index)}\r\n          />\r\n        </Grid>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const conceptosNotaCredito = (index) => {\r\n    return (\r\n      <>\r\n        <Grid id={`conceptos-factura-${index}`}>{index}</Grid>\r\n        <Grid item xs={2}>\r\n          <TextField\r\n            label=\"FUL\"\r\n            variant=\"outlined\"\r\n            value={FULCredito[index - 1]}\r\n            onChange={(e) => updateFULCredito(e, index)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <TextField\r\n            label=\"Concepto\"\r\n            variant=\"outlined\"\r\n            value={conceptoCredito[index - 1]}\r\n            onChange={(e) => updateConceptoCredito(e, index)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <TextField\r\n            label=\"Importe original\"\r\n            variant=\"outlined\"\r\n            value={importeOriginal[index - 1]}\r\n            onChange={(e) => updateImporteOriginal(e, index)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <TextField\r\n            label=\"Importe modificado\"\r\n            variant=\"outlined\"\r\n            value={importeModificado[index - 1]}\r\n            onChange={(e) => updateImporteModificado(e, index)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <TextField\r\n            label=\"Tasa IVA\"\r\n            variant=\"outlined\"\r\n            value={tasaIVACredito[index - 1]}\r\n            onChange={(e) => updateTasaIVACredito(e, index)}\r\n          />\r\n        </Grid>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const [refreshSite, setRefreshSite] = useState(0);\r\n  const [facturasArr, setFacturasArr] = useState([]);\r\n  const [notasArr, setNotasArr] = useState([]);\r\n\r\n  const addConceptoFactura = () => {\r\n    const newArr = facturasArr;\r\n    newArr.push(conceptosFacturaBuild(facturaIndex.current));\r\n    setFacturasArr(newArr);\r\n    facturaIndex.current += 1;\r\n    setRefreshSite(Math.random());\r\n  };\r\n\r\n  const addConceptoCredito = () => {\r\n    const newArr = notasArr;\r\n    newArr.push(conceptosNotaCredito(notasIndex.current));\r\n    setNotasArr(newArr);\r\n    notasIndex.current += 1;\r\n    setRefreshSite(Math.random());\r\n  };\r\n\r\n  // Upload logic\r\n\r\n  const onFileUpload = (e) => {\r\n    const buildFactura = window.confirm(\"Ya agregaste las líneas de factura que quieres anexar?\");\r\n    if(buildFactura){\r\n      let file = e.target.files[0];\r\n      let reader = new FileReader();\r\n      reader.readAsText(file);\r\n      reader.onloadend = function () {\r\n        var xmlData = reader.result;\r\n        const splitIndex = xmlData.indexOf(\"</ad:Conceptos></ad:CAB>\")\r\n        let xmlDataBase = xmlData.substr(0,splitIndex);\r\n        let xmlDataFin = xmlData.substr(splitIndex,);\r\n        //49 20 6b 6e 6f 77 20 74 68 69 73 20 69 73 20 75 67 6c 79 20 62 75 74 20 49 20 6a 75 73 74 20 77 61 6e 74 20 74 6f 20 66 69 6e 69 73 68\r\n        let newXmlData = xmlDataBase;\r\n        if(facturaIndex.current >= 2){\r\n          for (let i = 1; i < facturaIndex.current; i++){\r\n            let datosFactura = `<ad:LINEA LABEL=\"LINADD\" NUM_LIN=\"${facturaIndex.current}\" FOLIO_UNICO=\"${FUL[i]}\" CONCEPTO=\"${concepto[i]}\" CANTIDAD=\"${cantidad[i]}\" UNIDAD=\"${unidad[i]}\" PRECIO_UNIT=\"${precioUnitario[i]}\" IMPORTE_LINEA=\"${importeLinea[i]}\" IVA=\"${tasaIVA[i]}\" TOTAL=\"${importeLinea[i] + tasaIVA[i]}\"/>`\r\n            newXmlData += datosFactura;\r\n          }\r\n        }\r\n        newXmlData +=  xmlDataFin;\r\n        console.log(newXmlData);\r\n        let nombreArchivoADescargar = \"factura.xml\"\r\n        nombreArchivoADescargar = prompt(\"Nombre del archivo a descargar\");\r\n        nombreArchivoADescargar += \".xml\"\r\n        fileDownload(newXmlData, nombreArchivoADescargar);\r\n    }\r\n    } else{\r\n      alert(\"Agrega los datos que necesites.\");\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={3}>\r\n      <Grid item xs={12}>\r\n        <h1>Solario facturación</h1>\r\n        <input type=\"file\" name=\"xmlFile\" onChange={onFileUpload} />\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <TextField\r\n          className={classes.TextField}\r\n          label=\"Tipo documento\"\r\n          variant=\"outlined\"\r\n          value={tipoDocumento}\r\n          onChange={updateTipoDocumento}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <TextField\r\n          label=\"Cuenta de orden del PM\"\r\n          variant=\"outlined\"\r\n          className={classes.TextField}\r\n          value={cuentaDelOrdenDelPM}\r\n          onChange={updateCuentaDelOrdenDelPM}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Folio único de facturación FUF\"\r\n          variant=\"outlined\"\r\n          className={classes.TextField}\r\n          value={FUF}\r\n          onChange={updateFUF}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <TextField\r\n          label=\"Periodo ECD\"\r\n          variant=\"outlined\"\r\n          className={classes.TextField}\r\n          value={periodoECD}\r\n          onChange={updatePeriodoECD}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <TextField\r\n          label=\"Fecha límite de pago\"\r\n          variant=\"outlined\"\r\n          className={classes.TextField}\r\n          value={fechaLimDePago}\r\n          onChange={updateFechaLimDePago}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          label=\"Contacto\"\r\n          variant=\"outlined\"\r\n          className={classes.TextField}\r\n          value={contacto}\r\n          onChange={updateContacto}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <TextField\r\n          label=\"Nombre del banco\"\r\n          variant=\"outlined\"\r\n          className={classes.TextField}\r\n          value={banco}\r\n          onChange={updateBanco}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <TextField\r\n          label=\"Sucursal\"\r\n          variant=\"outlined\"\r\n          className={classes.TextField}\r\n          value={sucursal}\r\n          onChange={updateSucursal}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <TextField\r\n          label=\"Cuenta\"\r\n          variant=\"outlined\"\r\n          className={classes.TextField}\r\n          value={cuenta}\r\n          onChange={updateCuenta}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <TextField\r\n          label=\"CLABE\"\r\n          variant=\"outlined\"\r\n          className={classes.TextField}\r\n          value={CLABE}\r\n          onChange={updateCLABE}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <TextField\r\n          label=\"Referencia\"\r\n          variant=\"outlined\"\r\n          className={classes.TextField}\r\n          value={referencia}\r\n          onChange={updateReferencia}\r\n        />\r\n      </Grid>\r\n      <Grid>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <h3>Conceptos factura</h3>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.button}\r\n            onClick={addConceptoFactura}\r\n          >\r\n            +\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" className={classes.button}>\r\n            -\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n      {facturasArr.map((facturaArr, index) => {\r\n        return (\r\n          <div\r\n            key={`factura-${index}`}\r\n            style={{ display: \"flex\", margin: \"5px\" }}\r\n          >\r\n            {facturaArr}\r\n          </div>\r\n        );\r\n      })}\r\n      <Grid>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <h3>Conceptos de nota credito/cargo</h3>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            className={classes.button}\r\n            onClick={addConceptoCredito}\r\n          >\r\n            +\r\n          </Button>\r\n          <Button variant=\"contained\" className={classes.button}>\r\n            -\r\n          </Button>\r\n        </div>\r\n      </Grid>\r\n      {notasArr.map((arr, index) => {\r\n        return (\r\n          <div key={`nota-${index}`} style={{ display: \"flex\", margin: \"5px\" }}>\r\n            {arr}\r\n          </div>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Main from \"./Main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Main></Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}